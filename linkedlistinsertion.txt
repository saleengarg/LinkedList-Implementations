class Node(object):
    def __init__(self,data):
        self.data=data
        self.nextNode=None
class Linkedlist(object):
    def __init__(self):
        self.head=None
        self.size=0
##Insert a node at the starting of the linkedlist
    def insertstart(self,data):
        self.size+=1
        newNode=Node(data)
        if not self.head:
            self.head=newNode
        else:
            newNode.nextNode=self.head
            self.head=newNode
##insert a node at the end of the linkedlist
    def insertEnd(self,data):
        self.size+=1
        newNode=Node(data)
        actualNode=self.head
        while actualNode.nextNode is not None:
            actualNode=actualNode.nextNode
        actualNode.nextNode=newNode

##traversing the linkedlist
    def traverselist(self):
        actualNode=self.head
        while actualNode is not None:
            print(actualNode.data)
            actualNode=actualNode.nextNode
linkedlist=Linkedlist();
linkedlist.insertstart(1);
linkedlist.insertstart(2);
linkedlist.insertstart(3);
linkedlist.insertEnd(4);
linkedlist.insertEnd(5);
linkedlist.traverselist();

##OUTPUT
3
2
1
4
5
